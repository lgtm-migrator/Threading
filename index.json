{
  "README.html": {
    "href": "README.html",
    "title": "Threading | LinksPlatform's Platform.Threading Library",
    "keywords": "Threading LinksPlatform's Platform.Threading Class Library. Namespace: Platform.Threading Forked from: Konard/LinksPlatform/Platform/Platform.Helpers/Threading NuGet package: Platform.Threading Documentation PDF file with code for e-readers. Depend on Platform.Collections Dependent libraries Platform.IO Platform.Communication Platform.Data"
  },
  "api/Platform.Threading.ThreadHelpers.html": {
    "href": "api/Platform.Threading.ThreadHelpers.html",
    "title": "Class ThreadHelpers | LinksPlatform's Platform.Threading Library",
    "keywords": "Class ThreadHelpers Provides a set of helper methods for Thread objects. Предоставляет набор вспомогательных методов для объектов Thread . Inheritance Object ThreadHelpers Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Threading Assembly : Platform.Threading.dll Syntax public static class ThreadHelpers Fields | Improve this Doc View Source DefaultExtendedMaxStackSize Gets the extended maximum stack size in bytes by default. Возвращает расширенный максимальный размер стека в байтах по умолчанию. Declaration public static readonly int DefaultExtendedMaxStackSize Field Value Type Description Int32 | Improve this Doc View Source DefaultMaxStackSize Gets the maximum stack size in bytes by default. Возвращает размер максимальный стека в байтах по умолчанию. Declaration public static readonly int DefaultMaxStackSize Field Value Type Description Int32 | Improve this Doc View Source DefaultSleepInterval Returns the default time interval for transferring control to other threads in milliseconds Возвращает интервал времени для передачи управления другим потокам в миллисекундах по умолчанию. Declaration public static readonly int DefaultSleepInterval Field Value Type Description Int32 Methods | Improve this Doc View Source InvokeWithExtendedMaxStackSize(Action) Invokes the Action with extend maximum stack size. Вызывает Action с расширенным максимальным размером стека. Declaration public static void InvokeWithExtendedMaxStackSize(Action action) Parameters Type Name Description Action action The Action delegate. Делагат Action . | Improve this Doc View Source InvokeWithExtendedMaxStackSize<T>(T, Action<Object>) Invokes the Action<T> with extend maximum stack size. Вызывает Action<T> с расширенным максимальным размером стека. Declaration public static void InvokeWithExtendedMaxStackSize<T>(T param, Action<object> action) Parameters Type Name Description T param The object containing data to be used by the invoked Action<T> delegate. Объект, содержащий данные, которые будут использоваться вызваемым делегатом Action<T> . Action < Object > action The Action<T> delegate. Делагат Action<T> . Type Parameters Name Description T The type of the Action<T> argument. Тип аргумента Action<T> . | Improve this Doc View Source InvokeWithModifiedMaxStackSize(Action, Int32) Invokes the Action with modified maximum stack size. Вызывает Action с изменённым максимальным размером стека. Declaration public static void InvokeWithModifiedMaxStackSize(Action action, int maxStackSize) Parameters Type Name Description Action action The Action delegate. Делагат Action . Int32 maxStackSize The maximum stack size in bytes. Максимальный размер стека в байтах. | Improve this Doc View Source InvokeWithModifiedMaxStackSize<T>(T, Action<Object>, Int32) Invokes the Action<T> with modified maximum stack size. Вызывает Action<T> с изменённым максимальным размером стека. Declaration public static void InvokeWithModifiedMaxStackSize<T>(T param, Action<object> action, int maxStackSize) Parameters Type Name Description T param The object containing data to be used by the invoked Action<T> delegate. Объект, содержащий данные, которые будут использоваться вызваемым делегатом Action<T> . Action < Object > action The Action<T> delegate. Делагат Action<T> . Int32 maxStackSize The maximum stack size in bytes. Максимальный размер стека в байтах. Type Parameters Name Description T The type of the Action<T> argument. Тип аргумента Action<T> . | Improve this Doc View Source Sleep() Suspends the current thread for the DefaultSleepInterval . Declaration public static void Sleep() | Improve this Doc View Source StartNew(Action) Initializes a new instance of the Thread class, causes the operating system to change the state of that instance to Running and supplies the method executed by that thread. Инициализирует новый экземпляр класса Thread , просит операционную систему изменить состояние этого экземпляра на Running и предоставляет метод, который выполняется этим потоком. Declaration public static Thread StartNew(Action action) Parameters Type Name Description Action action The Action delegate. Делагат Action . Returns Type Description Thread A new started Thread instance. Новый запущенный экземпляр Thread . | Improve this Doc View Source StartNew(Action, Int32) Initializes a new instance of the Thread class, causes the operating system to change the state of that instance to Running and supplies the method executed by that thread. Инициализирует новый экземпляр класса Thread , просит операционную систему изменить состояние этого экземпляра на Running и предоставляет метод, который выполняется этим потоком. Declaration public static Thread StartNew(Action action, int maxStackSize) Parameters Type Name Description Action action The Action delegate. Делагат Action . Int32 maxStackSize The maximum stack size in bytes. Максимальный размер стека в байтах. Returns Type Description Thread A new started Thread instance. Новый запущенный экземпляр Thread . | Improve this Doc View Source StartNew<T>(T, Action<Object>) Initializes a new instance of the Thread class, causes the operating system to change the state of that instance to Running and supplies an object containing data to be used by the method that thread executes. Инициализирует новый экземпляр класса Thread , просит операционную систему изменить состояние этого экземпляра на Running и предоставляет объект, содержащий данные, которые будут использоваться в методе, который выполняет этот поток. Declaration public static Thread StartNew<T>(T param, Action<object> action) Parameters Type Name Description T param The object containing data to be used by the method that thread executes. Объект, содержащий данные, которые будут использоваться методом, выполняемым потоком. Action < Object > action The Action<T> delegate. Делагат Action<T> . Returns Type Description Thread A new started Thread instance. Новый запущенный экземпляр Thread . Type Parameters Name Description T The type of the Action<T> argument. Тип аргумента Action<T> . | Improve this Doc View Source StartNew<T>(T, Action<Object>, Int32) Initializes a new instance of the Thread class, causes the operating system to change the state of that instance to Running and supplies an object containing data to be used by the method that thread executes. Инициализирует новый экземпляр класса Thread , просит операционную систему изменить состояние этого экземпляра на Running и предоставляет объект, содержащий данные, которые будут использоваться в методе, который выполняет этот поток. Declaration public static Thread StartNew<T>(T param, Action<object> action, int maxStackSize) Parameters Type Name Description T param The object containing data to be used by the method that thread executes. Объект, содержащий данные, которые будут использоваться методом, выполняемым потоком. Action < Object > action The Action<T> delegate. Делагат Action<T> . Int32 maxStackSize The maximum stack size in bytes. Максимальный размер стека в байтах. Returns Type Description Thread A new started Thread instance. Новый запущенный экземпляр Thread . Type Parameters Name Description T The type of the Action<T> argument. Тип аргумента Action<T> ."
  },
  "api/Platform.Threading.TaskExtensions.html": {
    "href": "api/Platform.Threading.TaskExtensions.html",
    "title": "Class TaskExtensions | LinksPlatform's Platform.Threading Library",
    "keywords": "Class TaskExtensions Provides a set of extension methods for Task<TResult> objects. Предоставляет набор методов расширения для объектов Task<TResult> . Inheritance Object TaskExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Threading Assembly : Platform.Threading.dll Syntax public static class TaskExtensions Methods | Improve this Doc View Source AwaitResult<TReturn>(Task<TReturn>) Waits for completion of the asynchronous Task<TResult> and returns its result. Ожидает завершения асинхронной Task<TResult> и возвращает её результат. Declaration public static TReturn AwaitResult<TReturn>(this Task<TReturn> task) Parameters Type Name Description Task <TReturn> task The asynchronous Task<TResult> . Ассинхронная Task<TResult> . Returns Type Description TReturn The result of completed Task<TResult> . Результат завершённой Task<TResult> . Type Parameters Name Description TReturn The return value type. Тип возвращаемого значения."
  },
  "api/Platform.Threading.Synchronization.Unsynchronization.html": {
    "href": "api/Platform.Threading.Synchronization.Unsynchronization.html",
    "title": "Class Unsynchronization | LinksPlatform's Platform.Threading Library",
    "keywords": "Class Unsynchronization Implementation of ISynchronization that makes no actual synchronization. Реализация ISynchronization , которая не выполняет фактическую синхронизацию. Inheritance Object Unsynchronization Implements ISynchronization Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Threading.Synchronization Assembly : Platform.Threading.dll Syntax public class Unsynchronization : ISynchronization Methods | Improve this Doc View Source ExecuteReadOperation(Action) Executes action in read access mode. Выполняет действие в режиме доступа для чтения. Declaration public void ExecuteReadOperation(Action action) Parameters Type Name Description Action action The action. Действие. | Improve this Doc View Source ExecuteReadOperation<TResult>(Func<TResult>) Declaration public TResult ExecuteReadOperation<TResult>(Func<TResult> function) Parameters Type Name Description Func <TResult> function Returns Type Description TResult Type Parameters Name Description TResult | Improve this Doc View Source ExecuteWriteOperation(Action) Executes action in write access mode. Выполняет действие в режиме доступа для записи. Declaration public void ExecuteWriteOperation(Action action) Parameters Type Name Description Action action The action. Действие. | Improve this Doc View Source ExecuteWriteOperation<TResult>(Func<TResult>) Declaration public TResult ExecuteWriteOperation<TResult>(Func<TResult> function) Parameters Type Name Description Func <TResult> function Returns Type Description TResult Type Parameters Name Description TResult Implements ISynchronization Extension Methods ISynchronizationExtensions.ExecuteReadOperation<TResult, TParam>(ISynchronization, TParam, Func<TParam, TResult>) ISynchronizationExtensions.ExecuteReadOperation<TParam>(ISynchronization, TParam, Action<TParam>) ISynchronizationExtensions.ExecuteWriteOperation<TResult, TParam>(ISynchronization, TParam, Func<TParam, TResult>) ISynchronizationExtensions.ExecuteWriteOperation<TParam>(ISynchronization, TParam, Action<TParam>) ISynchronizationExtensions.ExecuteReadOperation<TResult, TParam1, TParam2>(ISynchronization, TParam1, TParam2, Func<TParam1, TParam2, TResult>) ISynchronizationExtensions.ExecuteReadOperation<TParam1, TParam2>(ISynchronization, TParam1, TParam2, Action<TParam1, TParam2>) ISynchronizationExtensions.ExecuteWriteOperation<TResult, TParam1, TParam2>(ISynchronization, TParam1, TParam2, Func<TParam1, TParam2, TResult>) ISynchronizationExtensions.ExecuteWriteOperation<TParam1, TParam2>(ISynchronization, TParam1, TParam2, Action<TParam1, TParam2>) ISynchronizationExtensions.ExecuteReadOperation<TResult, TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Func<TParam1, TParam2, TParam3, TResult>) ISynchronizationExtensions.ExecuteReadOperation<TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Action<TParam1, TParam2, TParam3>) ISynchronizationExtensions.ExecuteWriteOperation<TResult, TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Func<TParam1, TParam2, TParam3, TResult>) ISynchronizationExtensions.ExecuteWriteOperation<TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Action<TParam1, TParam2, TParam3>) ISynchronizationExtensions.ExecuteReadOperation<TResult, TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Func<TParam1, TParam2, TParam3, TParam4, TResult>) ISynchronizationExtensions.ExecuteReadOperation<TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Action<TParam1, TParam2, TParam3, TParam4>) ISynchronizationExtensions.ExecuteWriteOperation<TResult, TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Func<TParam1, TParam2, TParam3, TParam4, TResult>) ISynchronizationExtensions.ExecuteWriteOperation<TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Action<TParam1, TParam2, TParam3, TParam4>)"
  },
  "api/Platform.Threading.Synchronization.ISynchronization.html": {
    "href": "api/Platform.Threading.Synchronization.ISynchronization.html",
    "title": "Interface ISynchronization | LinksPlatform's Platform.Threading Library",
    "keywords": "Interface ISynchronization Represents a synchronization object that supports read and write operations. Представляет объект синхронизации с поддержкой операций чтения и записи. Namespace : Platform.Threading.Synchronization Assembly : Platform.Threading.dll Syntax public interface ISynchronization Methods | Improve this Doc View Source ExecuteReadOperation(Action) Executes action in read access mode. Выполняет действие в режиме доступа для чтения. Declaration void ExecuteReadOperation(Action action) Parameters Type Name Description Action action The action. Действие. | Improve this Doc View Source ExecuteReadOperation<TResult>(Func<TResult>) Executes a function in read access mode and returns the function's result. Выполняет функцию в режиме доступа для чтения и возвращает полученный из неё результат. Declaration TResult ExecuteReadOperation<TResult>(Func<TResult> function) Parameters Type Name Description Func <TResult> function The function. Функция. Returns Type Description TResult The function's result. Результат функции. Type Parameters Name Description TResult Type of function's result. Тип результата функции. | Improve this Doc View Source ExecuteWriteOperation(Action) Executes action in write access mode. Выполняет действие в режиме доступа для записи. Declaration void ExecuteWriteOperation(Action action) Parameters Type Name Description Action action The action. Действие. | Improve this Doc View Source ExecuteWriteOperation<TResult>(Func<TResult>) Executes a function in write access mode and returns the function's result. Выполняет функцию в режиме доступа для записи и возвращает полученный из неё результат. Declaration TResult ExecuteWriteOperation<TResult>(Func<TResult> function) Parameters Type Name Description Func <TResult> function The function. Функция. Returns Type Description TResult The function's result. Результат функции. Type Parameters Name Description TResult Type of function's result. Тип результата функции. Extension Methods ISynchronizationExtensions.ExecuteReadOperation<TResult, TParam>(ISynchronization, TParam, Func<TParam, TResult>) ISynchronizationExtensions.ExecuteReadOperation<TParam>(ISynchronization, TParam, Action<TParam>) ISynchronizationExtensions.ExecuteWriteOperation<TResult, TParam>(ISynchronization, TParam, Func<TParam, TResult>) ISynchronizationExtensions.ExecuteWriteOperation<TParam>(ISynchronization, TParam, Action<TParam>) ISynchronizationExtensions.ExecuteReadOperation<TResult, TParam1, TParam2>(ISynchronization, TParam1, TParam2, Func<TParam1, TParam2, TResult>) ISynchronizationExtensions.ExecuteReadOperation<TParam1, TParam2>(ISynchronization, TParam1, TParam2, Action<TParam1, TParam2>) ISynchronizationExtensions.ExecuteWriteOperation<TResult, TParam1, TParam2>(ISynchronization, TParam1, TParam2, Func<TParam1, TParam2, TResult>) ISynchronizationExtensions.ExecuteWriteOperation<TParam1, TParam2>(ISynchronization, TParam1, TParam2, Action<TParam1, TParam2>) ISynchronizationExtensions.ExecuteReadOperation<TResult, TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Func<TParam1, TParam2, TParam3, TResult>) ISynchronizationExtensions.ExecuteReadOperation<TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Action<TParam1, TParam2, TParam3>) ISynchronizationExtensions.ExecuteWriteOperation<TResult, TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Func<TParam1, TParam2, TParam3, TResult>) ISynchronizationExtensions.ExecuteWriteOperation<TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Action<TParam1, TParam2, TParam3>) ISynchronizationExtensions.ExecuteReadOperation<TResult, TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Func<TParam1, TParam2, TParam3, TParam4, TResult>) ISynchronizationExtensions.ExecuteReadOperation<TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Action<TParam1, TParam2, TParam3, TParam4>) ISynchronizationExtensions.ExecuteWriteOperation<TResult, TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Func<TParam1, TParam2, TParam3, TParam4, TResult>) ISynchronizationExtensions.ExecuteWriteOperation<TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Action<TParam1, TParam2, TParam3, TParam4>)"
  },
  "api/Platform.Threading.Synchronization.html": {
    "href": "api/Platform.Threading.Synchronization.html",
    "title": "Namespace Platform.Threading.Synchronization | LinksPlatform's Platform.Threading Library",
    "keywords": "Namespace Platform.Threading.Synchronization Classes ISynchronizationExtensions Contains extension methods for the ISynchronization interface. Содержит методы расширения для интерфейса ISynchronization . ReaderWriterLockSynchronization Implementation of ISynchronization based on ReaderWriterLockSlim . Реализация ISynchronization на основе ReaderWriterLockSlim . Unsynchronization Implementation of ISynchronization that makes no actual synchronization. Реализация ISynchronization , которая не выполняет фактическую синхронизацию. Interfaces ISynchronization Represents a synchronization object that supports read and write operations. Представляет объект синхронизации с поддержкой операций чтения и записи. ISynchronized<TInterface> Represents extendable synchronized interface access gate. Представляет расширяемый интерфейс шлюза синхронизированного доступа."
  },
  "api/Platform.Threading.Synchronization.ReaderWriterLockSynchronization.html": {
    "href": "api/Platform.Threading.Synchronization.ReaderWriterLockSynchronization.html",
    "title": "Class ReaderWriterLockSynchronization | LinksPlatform's Platform.Threading Library",
    "keywords": "Class ReaderWriterLockSynchronization Implementation of ISynchronization based on ReaderWriterLockSlim . Реализация ISynchronization на основе ReaderWriterLockSlim . Inheritance Object ReaderWriterLockSynchronization Implements ISynchronization Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Threading.Synchronization Assembly : Platform.Threading.dll Syntax public class ReaderWriterLockSynchronization : ISynchronization Methods | Improve this Doc View Source ExecuteReadOperation(Action) Executes action in read access mode. Выполняет действие в режиме доступа для чтения. Declaration public void ExecuteReadOperation(Action action) Parameters Type Name Description Action action The action. Действие. | Improve this Doc View Source ExecuteReadOperation<TResult>(Func<TResult>) Declaration public TResult ExecuteReadOperation<TResult>(Func<TResult> function) Parameters Type Name Description Func <TResult> function Returns Type Description TResult Type Parameters Name Description TResult | Improve this Doc View Source ExecuteWriteOperation(Action) Executes action in write access mode. Выполняет действие в режиме доступа для записи. Declaration public void ExecuteWriteOperation(Action action) Parameters Type Name Description Action action The action. Действие. | Improve this Doc View Source ExecuteWriteOperation<TResult>(Func<TResult>) Declaration public TResult ExecuteWriteOperation<TResult>(Func<TResult> function) Parameters Type Name Description Func <TResult> function Returns Type Description TResult Type Parameters Name Description TResult Implements ISynchronization Extension Methods ISynchronizationExtensions.ExecuteReadOperation<TResult, TParam>(ISynchronization, TParam, Func<TParam, TResult>) ISynchronizationExtensions.ExecuteReadOperation<TParam>(ISynchronization, TParam, Action<TParam>) ISynchronizationExtensions.ExecuteWriteOperation<TResult, TParam>(ISynchronization, TParam, Func<TParam, TResult>) ISynchronizationExtensions.ExecuteWriteOperation<TParam>(ISynchronization, TParam, Action<TParam>) ISynchronizationExtensions.ExecuteReadOperation<TResult, TParam1, TParam2>(ISynchronization, TParam1, TParam2, Func<TParam1, TParam2, TResult>) ISynchronizationExtensions.ExecuteReadOperation<TParam1, TParam2>(ISynchronization, TParam1, TParam2, Action<TParam1, TParam2>) ISynchronizationExtensions.ExecuteWriteOperation<TResult, TParam1, TParam2>(ISynchronization, TParam1, TParam2, Func<TParam1, TParam2, TResult>) ISynchronizationExtensions.ExecuteWriteOperation<TParam1, TParam2>(ISynchronization, TParam1, TParam2, Action<TParam1, TParam2>) ISynchronizationExtensions.ExecuteReadOperation<TResult, TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Func<TParam1, TParam2, TParam3, TResult>) ISynchronizationExtensions.ExecuteReadOperation<TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Action<TParam1, TParam2, TParam3>) ISynchronizationExtensions.ExecuteWriteOperation<TResult, TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Func<TParam1, TParam2, TParam3, TResult>) ISynchronizationExtensions.ExecuteWriteOperation<TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Action<TParam1, TParam2, TParam3>) ISynchronizationExtensions.ExecuteReadOperation<TResult, TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Func<TParam1, TParam2, TParam3, TParam4, TResult>) ISynchronizationExtensions.ExecuteReadOperation<TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Action<TParam1, TParam2, TParam3, TParam4>) ISynchronizationExtensions.ExecuteWriteOperation<TResult, TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Func<TParam1, TParam2, TParam3, TParam4, TResult>) ISynchronizationExtensions.ExecuteWriteOperation<TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Action<TParam1, TParam2, TParam3, TParam4>)"
  },
  "api/Platform.Threading.ConcurrentQueueExtensions.html": {
    "href": "api/Platform.Threading.ConcurrentQueueExtensions.html",
    "title": "Class ConcurrentQueueExtensions | LinksPlatform's Platform.Threading Library",
    "keywords": "Class ConcurrentQueueExtensions Provides a set of extension methods for ConcurrentQueue<T> objects. Предоставляет набор методов расширения для объектов ConcurrentQueue<T> . Inheritance Object ConcurrentQueueExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Threading Assembly : Platform.Threading.dll Syntax public static class ConcurrentQueueExtensions Methods | Improve this Doc View Source AwaitAll(ConcurrentQueue<Task>) Suspends evaluation of the method until all asynchronous operations in the queue finish. Приостановляет выполнение метода до завершения всех асинхронных операций в очереди. Declaration public static Task AwaitAll(this ConcurrentQueue<Task> queue) Parameters Type Name Description ConcurrentQueue < Task > queue The queue of asynchronous operations. Очередь асинхронных операций. Returns Type Description Task An asynchronous operation representation. Представление асинхронной операции. | Improve this Doc View Source AwaitOne(ConcurrentQueue<Task>) Suspends evaluation of the method until the first asynchronous operation in the queue finishes. Приостанавливает выполнение метода до завершения первой асинхронной операции в очереди. Declaration public static Task AwaitOne(this ConcurrentQueue<Task> queue) Parameters Type Name Description ConcurrentQueue < Task > queue The queue of asynchronous operations. Очередь асинхронных операций. Returns Type Description Task An asynchronous operation representation. Представление асинхронной операции. | Improve this Doc View Source EnqueueAsRunnedTask(ConcurrentQueue<Task>, Action) Adds an Action as runned Task to the end of the ConcurrentQueue<T> . Добавляет Action как запущенную Task в конец ConcurrentQueue<T> . Declaration public static void EnqueueAsRunnedTask(this ConcurrentQueue<Task> queue, Action action) Parameters Type Name Description ConcurrentQueue < Task > queue The queue of asynchronous operations. Очередь асинхронных операций. Action action The Action delegate. Делагат Action ."
  },
  "api/Platform.Threading.html": {
    "href": "api/Platform.Threading.html",
    "title": "Namespace Platform.Threading | LinksPlatform's Platform.Threading Library",
    "keywords": "Namespace Platform.Threading Classes ConcurrentQueueExtensions Provides a set of extension methods for ConcurrentQueue<T> objects. Предоставляет набор методов расширения для объектов ConcurrentQueue<T> . TaskExtensions Provides a set of extension methods for Task<TResult> objects. Предоставляет набор методов расширения для объектов Task<TResult> . ThreadHelpers Provides a set of helper methods for Thread objects. Предоставляет набор вспомогательных методов для объектов Thread ."
  },
  "api/Platform.Threading.Synchronization.ISynchronized-1.html": {
    "href": "api/Platform.Threading.Synchronization.ISynchronized-1.html",
    "title": "Interface ISynchronized<TInterface> | LinksPlatform's Platform.Threading Library",
    "keywords": "Interface ISynchronized<TInterface> Represents extendable synchronized interface access gate. Представляет расширяемый интерфейс шлюза синхронизированного доступа. Namespace : Platform.Threading.Synchronization Assembly : Platform.Threading.dll Syntax public interface ISynchronized<out TInterface> Type Parameters Name Description TInterface Synchronized interface. Синхронизируемый интерфейс. Properties | Improve this Doc View Source Sync Get wrapped/decorated version of TInterface , that does garantee thread safe access synchronization. Возвращает обернутую/декорированную версию TInterface , которая гарантирует потокобезопасную синхронизацию доступа. Declaration TInterface Sync { get; } Property Value Type Description TInterface Remarks It is safe to use it directly, because it must be thread safe implementation. Безопасно использовать напрямую, так как реализация должна быть потокобезопасной. | Improve this Doc View Source SyncRoot Gets sychronization method. Возвращает способ синхронизации. Declaration ISynchronization SyncRoot { get; } Property Value Type Description ISynchronization | Improve this Doc View Source Unsync Get source version of TInterface , that does not garantee thread safe access synchronization. Возвращает исходную версию TInterface , которая не гарантирует потокобезопасную синхронизацию доступа. Declaration TInterface Unsync { get; } Property Value Type Description TInterface Remarks It is unsafe to use it directly, unless compound context using SyncRoot is created. Использовать напрямую небезопасно, за исключением ситуации когда создаётся составной контекст с использованием SyncRoot."
  },
  "api/Platform.Threading.Synchronization.ISynchronizationExtensions.html": {
    "href": "api/Platform.Threading.Synchronization.ISynchronizationExtensions.html",
    "title": "Class ISynchronizationExtensions | LinksPlatform's Platform.Threading Library",
    "keywords": "Class ISynchronizationExtensions Contains extension methods for the ISynchronization interface. Содержит методы расширения для интерфейса ISynchronization . Inheritance Object ISynchronizationExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Threading.Synchronization Assembly : Platform.Threading.dll Syntax public static class ISynchronizationExtensions Methods | Improve this Doc View Source ExecuteReadOperation<TParam>(ISynchronization, TParam, Action<TParam>) Executes action in read access mode. Выполняет действие в режиме доступа для чтения. Declaration public static void ExecuteReadOperation<TParam>(this ISynchronization synchronization, TParam parameter, Action<TParam> action) Parameters Type Name Description ISynchronization synchronization Synchronization object. Синхронизация объекта. TParam parameter The parameter Параметр. Action <TParam> action The action. Действие. Type Parameters Name Description TParam The parameter type. Тип параметра. | Improve this Doc View Source ExecuteReadOperation<TParam1, TParam2>(ISynchronization, TParam1, TParam2, Action<TParam1, TParam2>) Executes action in read access mode. Выполняет действие в режиме доступа для чтения. Declaration public static void ExecuteReadOperation<TParam1, TParam2>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, Action<TParam1, TParam2> action) Parameters Type Name Description ISynchronization synchronization Synchronization object. Синхронизация объекта. TParam1 parameter1 The first parameter Первый параметр. TParam2 parameter2 The second parameter Второй параметр. Action <TParam1, TParam2> action The action. Действие. Type Parameters Name Description TParam1 The first parameter type. Тип первого параметра. TParam2 The second parameter type. Тип второго параметра. | Improve this Doc View Source ExecuteReadOperation<TResult, TParam>(ISynchronization, TParam, Func<TParam, TResult>) Executes a function in read access mode and returns the function's result. Выполняет функцию в режиме доступа для чтения и возвращает полученный из неё результат. Declaration public static TResult ExecuteReadOperation<TResult, TParam>(this ISynchronization synchronization, TParam parameter, Func<TParam, TResult> function) Parameters Type Name Description ISynchronization synchronization Synchronization object. Синхронизация объекта. TParam parameter The parameter Параметр. Func <TParam, TResult> function The function. Функция. Returns Type Description TResult The function's result. Результат функции. Type Parameters Name Description TResult Type of function's result. Тип результата функции. TParam The parameter type. Тип параметра. | Improve this Doc View Source ExecuteReadOperation<TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Action<TParam1, TParam2, TParam3>) Executes action in read access mode. Выполняет действие в режиме доступа для чтения. Declaration public static void ExecuteReadOperation<TParam1, TParam2, TParam3>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, TParam3 parameter3, Action<TParam1, TParam2, TParam3> action) Parameters Type Name Description ISynchronization synchronization Synchronization object. Синхронизация объекта. TParam1 parameter1 The first parameter Первый параметр. TParam2 parameter2 The second parameter Второй параметр. TParam3 parameter3 The third parameter Третий параметр. Action <TParam1, TParam2, TParam3> action The action. Действие. Type Parameters Name Description TParam1 The first parameter type. Тип первого параметра. TParam2 The second parameter type. Тип второго параметра. TParam3 The third parameter type. Тип третьего параметра. | Improve this Doc View Source ExecuteReadOperation<TResult, TParam1, TParam2>(ISynchronization, TParam1, TParam2, Func<TParam1, TParam2, TResult>) Executes a function in read access mode and returns the function's result. Выполняет функцию в режиме доступа для чтения и возвращает полученный из неё результат. Declaration public static TResult ExecuteReadOperation<TResult, TParam1, TParam2>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, Func<TParam1, TParam2, TResult> function) Parameters Type Name Description ISynchronization synchronization Synchronization object. Синхронизация объекта. TParam1 parameter1 The first parameter Первый параметр. TParam2 parameter2 The second parameter Второй параметр. Func <TParam1, TParam2, TResult> function The function. Функция. Returns Type Description TResult The function's result. Результат функции. Type Parameters Name Description TResult Type of function's result. Тип результата функции. TParam1 The first parameter type. Тип первого параметра. TParam2 The second parameter type. Тип второго параметра. | Improve this Doc View Source ExecuteReadOperation<TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Action<TParam1, TParam2, TParam3, TParam4>) Executes action in read access mode. Выполняет действие в режиме доступа для чтения. Declaration public static void ExecuteReadOperation<TParam1, TParam2, TParam3, TParam4>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, TParam3 parameter3, TParam4 parameter4, Action<TParam1, TParam2, TParam3, TParam4> action) Parameters Type Name Description ISynchronization synchronization Synchronization object. Синхронизация объекта. TParam1 parameter1 The first parameter Первый параметр. TParam2 parameter2 The second parameter Второй параметр. TParam3 parameter3 The third parameter Третий параметр. TParam4 parameter4 The forth parameter Чертвёртый параметр. Action <TParam1, TParam2, TParam3, TParam4> action The action. Действие. Type Parameters Name Description TParam1 The first parameter type. Тип первого параметра. TParam2 The second parameter type. Тип второго параметра. TParam3 The third parameter type. Тип третьего параметра. TParam4 The forth parameter type. Тип четвёртого параметра. | Improve this Doc View Source ExecuteReadOperation<TResult, TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Func<TParam1, TParam2, TParam3, TResult>) Executes a function in read access mode and returns the function's result. Выполняет функцию в режиме доступа для чтения и возвращает полученный из неё результат. Declaration public static TResult ExecuteReadOperation<TResult, TParam1, TParam2, TParam3>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, TParam3 parameter3, Func<TParam1, TParam2, TParam3, TResult> function) Parameters Type Name Description ISynchronization synchronization Synchronization object. Синхронизация объекта. TParam1 parameter1 The first parameter Первый параметр. TParam2 parameter2 The second parameter Второй параметр. TParam3 parameter3 The third parameter Третий параметр. Func <TParam1, TParam2, TParam3, TResult> function The function. Функция. Returns Type Description TResult The function's result. Результат функции. Type Parameters Name Description TResult Type of function's result. Тип результата функции. TParam1 The first parameter type. Тип первого параметра. TParam2 The second parameter type. Тип второго параметра. TParam3 The third parameter type. Тип третьего параметра. | Improve this Doc View Source ExecuteReadOperation<TResult, TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Func<TParam1, TParam2, TParam3, TParam4, TResult>) Executes a function in read access mode and returns the function's result. Выполняет функцию в режиме доступа для чтения и возвращает полученный из неё результат. Declaration public static TResult ExecuteReadOperation<TResult, TParam1, TParam2, TParam3, TParam4>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, TParam3 parameter3, TParam4 parameter4, Func<TParam1, TParam2, TParam3, TParam4, TResult> function) Parameters Type Name Description ISynchronization synchronization Synchronization object. Синхронизация объекта. TParam1 parameter1 The first parameter Первый параметр. TParam2 parameter2 The second parameter Второй параметр. TParam3 parameter3 The third parameter Третий параметр. TParam4 parameter4 The forth parameter Чертвёртый параметр. Func <TParam1, TParam2, TParam3, TParam4, TResult> function The function. Функция. Returns Type Description TResult The function's result. Результат функции. Type Parameters Name Description TResult Type of function's result. Тип результата функции. TParam1 The first parameter type. Тип первого параметра. TParam2 The second parameter type. Тип второго параметра. TParam3 The third parameter type. Тип третьего параметра. TParam4 The forth parameter type. Тип четвёртого параметра. | Improve this Doc View Source ExecuteWriteOperation<TParam>(ISynchronization, TParam, Action<TParam>) Executes action in write access mode. Выполняет действие в режиме доступа для записи. Declaration public static void ExecuteWriteOperation<TParam>(this ISynchronization synchronization, TParam parameter, Action<TParam> action) Parameters Type Name Description ISynchronization synchronization Synchronization object. Синхронизация объекта. TParam parameter The parameter Параметр. Action <TParam> action The action. Действие. Type Parameters Name Description TParam The parameter type. Тип параметра. | Improve this Doc View Source ExecuteWriteOperation<TParam1, TParam2>(ISynchronization, TParam1, TParam2, Action<TParam1, TParam2>) Executes action in write access mode. Выполняет действие в режиме доступа для записи. Declaration public static void ExecuteWriteOperation<TParam1, TParam2>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, Action<TParam1, TParam2> action) Parameters Type Name Description ISynchronization synchronization Synchronization object. Синхронизация объекта. TParam1 parameter1 The first parameter Первый параметр. TParam2 parameter2 The second parameter Второй параметр. Action <TParam1, TParam2> action The action. Действие. Type Parameters Name Description TParam1 The first parameter type. Тип первого параметра. TParam2 The second parameter type. Тип второго параметра. | Improve this Doc View Source ExecuteWriteOperation<TResult, TParam>(ISynchronization, TParam, Func<TParam, TResult>) Executes a function in write access mode and returns the function's result. Выполняет функцию в режиме доступа для записи и возвращает полученный из неё результат. Declaration public static TResult ExecuteWriteOperation<TResult, TParam>(this ISynchronization synchronization, TParam parameter, Func<TParam, TResult> function) Parameters Type Name Description ISynchronization synchronization Synchronization object. Синхронизация объекта. TParam parameter The parameter Параметр. Func <TParam, TResult> function The function. Функция. Returns Type Description TResult The function's result. Результат функции. Type Parameters Name Description TResult Type of function's result. Тип результата функции. TParam The parameter type. Тип параметра. | Improve this Doc View Source ExecuteWriteOperation<TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Action<TParam1, TParam2, TParam3>) Executes action in write access mode. Выполняет действие в режиме доступа для записи. Declaration public static void ExecuteWriteOperation<TParam1, TParam2, TParam3>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, TParam3 parameter3, Action<TParam1, TParam2, TParam3> action) Parameters Type Name Description ISynchronization synchronization Synchronization object. Синхронизация объекта. TParam1 parameter1 The first parameter Первый параметр. TParam2 parameter2 The second parameter Второй параметр. TParam3 parameter3 The third parameter Третий параметр. Action <TParam1, TParam2, TParam3> action The action. Действие. Type Parameters Name Description TParam1 The first parameter type. Тип первого параметра. TParam2 The second parameter type. Тип второго параметра. TParam3 The third parameter type. Тип третьего параметра. | Improve this Doc View Source ExecuteWriteOperation<TResult, TParam1, TParam2>(ISynchronization, TParam1, TParam2, Func<TParam1, TParam2, TResult>) Executes a function in write access mode and returns the function's result. Выполняет функцию в режиме доступа для записи и возвращает полученный из неё результат. Declaration public static TResult ExecuteWriteOperation<TResult, TParam1, TParam2>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, Func<TParam1, TParam2, TResult> function) Parameters Type Name Description ISynchronization synchronization Synchronization object. Синхронизация объекта. TParam1 parameter1 The first parameter Первый параметр. TParam2 parameter2 The second parameter Второй параметр. Func <TParam1, TParam2, TResult> function The function. Функция. Returns Type Description TResult The function's result. Результат функции. Type Parameters Name Description TResult Type of function's result. Тип результата функции. TParam1 The first parameter type. Тип первого параметра. TParam2 The second parameter type. Тип второго параметра. | Improve this Doc View Source ExecuteWriteOperation<TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Action<TParam1, TParam2, TParam3, TParam4>) Executes action in write access mode. Выполняет действие в режиме доступа для записи. Declaration public static void ExecuteWriteOperation<TParam1, TParam2, TParam3, TParam4>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, TParam3 parameter3, TParam4 parameter4, Action<TParam1, TParam2, TParam3, TParam4> action) Parameters Type Name Description ISynchronization synchronization Synchronization object. Синхронизация объекта. TParam1 parameter1 The first parameter Первый параметр. TParam2 parameter2 The second parameter Второй параметр. TParam3 parameter3 The third parameter Третий параметр. TParam4 parameter4 The forth parameter Чертвёртый параметр. Action <TParam1, TParam2, TParam3, TParam4> action The action. Действие. Type Parameters Name Description TParam1 The first parameter type. Тип первого параметра. TParam2 The second parameter type. Тип второго параметра. TParam3 The third parameter type. Тип третьего параметра. TParam4 The forth parameter type. Тип четвёртого параметра. | Improve this Doc View Source ExecuteWriteOperation<TResult, TParam1, TParam2, TParam3>(ISynchronization, TParam1, TParam2, TParam3, Func<TParam1, TParam2, TParam3, TResult>) Executes a function in write access mode and returns the function's result. Выполняет функцию в режиме доступа для записи и возвращает полученный из неё результат. Declaration public static TResult ExecuteWriteOperation<TResult, TParam1, TParam2, TParam3>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, TParam3 parameter3, Func<TParam1, TParam2, TParam3, TResult> function) Parameters Type Name Description ISynchronization synchronization Synchronization object. Синхронизация объекта. TParam1 parameter1 The first parameter Первый параметр. TParam2 parameter2 The second parameter Второй параметр. TParam3 parameter3 The third parameter Третий параметр. Func <TParam1, TParam2, TParam3, TResult> function The function. Функция. Returns Type Description TResult The function's result. Результат функции. Type Parameters Name Description TResult Type of function's result. Тип результата функции. TParam1 The first parameter type. Тип первого параметра. TParam2 The second parameter type. Тип второго параметра. TParam3 The third parameter type. Тип третьего параметра. | Improve this Doc View Source ExecuteWriteOperation<TResult, TParam1, TParam2, TParam3, TParam4>(ISynchronization, TParam1, TParam2, TParam3, TParam4, Func<TParam1, TParam2, TParam3, TParam4, TResult>) Executes a function in write access mode and returns the function's result. Выполняет функцию в режиме доступа для записи и возвращает полученный из неё результат. Declaration public static TResult ExecuteWriteOperation<TResult, TParam1, TParam2, TParam3, TParam4>(this ISynchronization synchronization, TParam1 parameter1, TParam2 parameter2, TParam3 parameter3, TParam4 parameter4, Func<TParam1, TParam2, TParam3, TParam4, TResult> function) Parameters Type Name Description ISynchronization synchronization Synchronization object. Синхронизация объекта. TParam1 parameter1 The first parameter Первый параметр. TParam2 parameter2 The second parameter Второй параметр. TParam3 parameter3 The third parameter Третий параметр. TParam4 parameter4 The forth parameter Чертвёртый параметр. Func <TParam1, TParam2, TParam3, TParam4, TResult> function The function. Функция. Returns Type Description TResult The function's result. Результат функции. Type Parameters Name Description TResult Type of function's result. Тип результата функции. TParam1 The first parameter type. Тип первого параметра. TParam2 The second parameter type. Тип второго параметра. TParam3 The third parameter type. Тип третьего параметра. TParam4 The forth parameter type. Тип четвёртого параметра."
  }
}